define(['../array/slice'], function (slice) {

    /**
     * Creates a partially applied function.
     */
<<<<<<< HEAD
    function partial(fn, var_args){
        var argsArr = slice(arguments, 1); //curried args
        return function(){
            return fn.apply(this, argsArr.concat(slice(arguments)));
        };
    }

=======
    function partial(f) {
        var as = slice(arguments, 1);
        return function() {
            var args = as.concat(slice(arguments));
            for (var i = args.length; i--;) {
                if (args[i] === partial._) {
                    args[i] = args.splice(-1)[0];
                }
            }
            return f.apply(this, args);
        };
    }

    partial._ = {};

>>>>>>> 15ba42d088e9a77be8036efbc2189d0ea4c8dfc3
    return partial;

});
