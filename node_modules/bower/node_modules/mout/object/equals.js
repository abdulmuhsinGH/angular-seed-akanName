var hasOwn = require('./hasOwn');
var every = require('./every');
var isObject = require('../lang/isObject');
<<<<<<< HEAD

    function defaultCompare(a, b) {
        return a === b;
    }
=======
var is = require('../lang/is');
>>>>>>> 15ba42d088e9a77be8036efbc2189d0ea4c8dfc3

    // Makes a function to compare the object values from the specified compare
    // operation callback.
    function makeCompare(callback) {
        return function(value, key) {
            return hasOwn(this, key) && callback(value, this[key]);
        };
    }

    function checkProperties(value, key) {
        return hasOwn(this, key);
    }

    /**
     * Checks if two objects have the same keys and values.
     */
    function equals(a, b, callback) {
<<<<<<< HEAD
        callback = callback || defaultCompare;
=======
        callback = callback || is;
>>>>>>> 15ba42d088e9a77be8036efbc2189d0ea4c8dfc3

        if (!isObject(a) || !isObject(b)) {
            return callback(a, b);
        }

        return (every(a, makeCompare(callback), b) &&
                every(b, checkProperties, a));
    }

    module.exports = equals;

